// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SteelEstimation.Infrastructure.Data;

#nullable disable

namespace SteelEstimation.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SteelEstimation.Core.Entities.Invite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvitedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("SendWelcomeEmail")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UsedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("ExpiryDate");

                    b.HasIndex("InvitedByUserId");

                    b.HasIndex("IsUsed");

                    b.HasIndex("RoleId");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ActualCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualHours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EstimatedCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstimatedHours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("LaborRatePerHour")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PackageNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("PackageNumber");

                    b.HasIndex("ProjectId");

                    b.HasIndex("Status");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.PackageWorksheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalHours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("WorksheetType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("WorksheetType");

                    b.ToTable("PackageWorksheets");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.ProcessingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BundleGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryBundleQty")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DrawingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Length")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("LoadingTimePerBundle")
                        .HasColumnType("int");

                    b.Property<int>("MarkMeasureCut")
                        .HasColumnType("int");

                    b.Property<string>("MaterialId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MoveAfterWeld")
                        .HasColumnType("int");

                    b.Property<int>("MoveToAssembly")
                        .HasColumnType("int");

                    b.Property<int>("PackBundleQty")
                        .HasColumnType("int");

                    b.Property<string>("PackGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PackageWorksheetId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("QualityCheckClean")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UnloadTimePerBundle")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasPrecision(10, 3)
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("BundleGroup");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PackageWorksheetId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProcessingItems");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ContingencyPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EstimationStage")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("LaborRate")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("JobNumber");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.ProjectUser", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("GrantedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrantedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("GrantedBy");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUsers");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanCreateProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeleteProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("CanExportData")
                        .HasColumnType("bit");

                    b.Property<bool>("CanImportData")
                        .HasColumnType("bit");

                    b.Property<bool>("CanManageUsers")
                        .HasColumnType("bit");

                    b.Property<bool>("CanViewAllProjects")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanCreateProjects = true,
                            CanDeleteProjects = true,
                            CanEditProjects = true,
                            CanExportData = true,
                            CanImportData = true,
                            CanManageUsers = true,
                            CanViewAllProjects = true,
                            CreatedDate = new DateTime(2025, 7, 1, 4, 56, 56, 367, DateTimeKind.Utc).AddTicks(6467),
                            Description = "Full system access",
                            RoleName = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CanCreateProjects = true,
                            CanDeleteProjects = true,
                            CanEditProjects = true,
                            CanExportData = true,
                            CanImportData = true,
                            CanManageUsers = false,
                            CanViewAllProjects = true,
                            CreatedDate = new DateTime(2025, 7, 1, 4, 56, 56, 367, DateTimeKind.Utc).AddTicks(6473),
                            Description = "Can manage all projects and users",
                            RoleName = "Project Manager"
                        },
                        new
                        {
                            Id = 3,
                            CanCreateProjects = true,
                            CanDeleteProjects = false,
                            CanEditProjects = true,
                            CanExportData = true,
                            CanImportData = true,
                            CanManageUsers = false,
                            CanViewAllProjects = false,
                            CreatedDate = new DateTime(2025, 7, 1, 4, 56, 56, 367, DateTimeKind.Utc).AddTicks(6475),
                            Description = "Can create and edit projects",
                            RoleName = "Senior Estimator"
                        },
                        new
                        {
                            Id = 4,
                            CanCreateProjects = false,
                            CanDeleteProjects = false,
                            CanEditProjects = true,
                            CanExportData = true,
                            CanImportData = true,
                            CanManageUsers = false,
                            CanViewAllProjects = false,
                            CreatedDate = new DateTime(2025, 7, 1, 4, 56, 56, 367, DateTimeKind.Utc).AddTicks(6477),
                            Description = "Can edit assigned projects",
                            RoleName = "Estimator"
                        },
                        new
                        {
                            Id = 5,
                            CanCreateProjects = false,
                            CanDeleteProjects = false,
                            CanEditProjects = false,
                            CanExportData = true,
                            CanImportData = false,
                            CanManageUsers = false,
                            CanViewAllProjects = false,
                            CreatedDate = new DateTime(2025, 7, 1, 4, 56, 56, 367, DateTimeKind.Utc).AddTicks(6478),
                            Description = "Read-only access to assigned projects",
                            RoleName = "Viewer"
                        });
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LockedOutUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("PasswordResetExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("AssignedBy");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.WeldingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssembleFitTack")
                        .HasColumnType("int");

                    b.Property<int>("ConnectionQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrawingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationComments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("PackageWorksheetId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Weld")
                        .HasColumnType("int");

                    b.Property<int>("WeldCheck")
                        .HasColumnType("int");

                    b.Property<decimal>("WeldLength")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("WeldTest")
                        .HasColumnType("int");

                    b.Property<string>("WeldType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PackageWorksheetId");

                    b.HasIndex("ProjectId");

                    b.ToTable("WeldingItems");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Invite", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.User", "InvitedByUser")
                        .WithMany()
                        .HasForeignKey("InvitedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SteelEstimation.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SteelEstimation.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("InvitedByUser");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Package", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SteelEstimation.Core.Entities.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SteelEstimation.Core.Entities.Project", "Project")
                        .WithMany("Packages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.PackageWorksheet", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.Package", "Package")
                        .WithMany("Worksheets")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.ProcessingItem", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.PackageWorksheet", "PackageWorksheet")
                        .WithMany("ProcessingItems")
                        .HasForeignKey("PackageWorksheetId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SteelEstimation.Core.Entities.Project", "Project")
                        .WithMany("ProcessingItems")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageWorksheet");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Project", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SteelEstimation.Core.Entities.User", "Owner")
                        .WithMany("OwnedProjects")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.ProjectUser", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.User", "GrantedByUser")
                        .WithMany()
                        .HasForeignKey("GrantedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SteelEstimation.Core.Entities.Project", "Project")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SteelEstimation.Core.Entities.User", "User")
                        .WithMany("ProjectAccess")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrantedByUser");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.UserRole", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.User", "AssignedByUser")
                        .WithMany()
                        .HasForeignKey("AssignedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SteelEstimation.Core.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SteelEstimation.Core.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedByUser");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.WeldingItem", b =>
                {
                    b.HasOne("SteelEstimation.Core.Entities.PackageWorksheet", "PackageWorksheet")
                        .WithMany("WeldingItems")
                        .HasForeignKey("PackageWorksheetId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SteelEstimation.Core.Entities.Project", "Project")
                        .WithMany("WeldingItems")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageWorksheet");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Package", b =>
                {
                    b.Navigation("Worksheets");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.PackageWorksheet", b =>
                {
                    b.Navigation("ProcessingItems");

                    b.Navigation("WeldingItems");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Project", b =>
                {
                    b.Navigation("Packages");

                    b.Navigation("ProcessingItems");

                    b.Navigation("ProjectUsers");

                    b.Navigation("WeldingItems");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("SteelEstimation.Core.Entities.User", b =>
                {
                    b.Navigation("OwnedProjects");

                    b.Navigation("ProjectAccess");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
