@page "/test-dicebear-fix"
@using Microsoft.AspNetCore.Authorization
@using SteelEstimation.Web.Data
@attribute [Authorize]

<h3>DiceBear SVG Rendering Fix Test</h3>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h4>Testing Different Approaches</h4>
            
            <!-- Method 1: Background Image CSS -->
            <div class="card mb-3">
                <div class="card-header">Method 1: CSS Background Image</div>
                <div class="card-body">
                    <div class="avatar-preview-bg" 
                         style="width: 100px; height: 100px; background-image: url('https://api.dicebear.com/9.x/bottts/svg?seed=test&eyes=eva&mouth=smile01&primaryColor=%230E7490'); background-size: contain; background-repeat: no-repeat; background-position: center;">
                    </div>
                    <p class="mt-2">CSS background-image approach</p>
                </div>
            </div>
            
            <!-- Method 2: Object tag with data URL -->
            <div class="card mb-3">
                <div class="card-header">Method 2: Object tag</div>
                <div class="card-body">
                    <object data="https://api.dicebear.com/9.x/bottts/svg?seed=test&eyes=robocop&mouth=bite&primaryColor=%230E7490" 
                            type="image/svg+xml" 
                            width="100" 
                            height="100">
                        <span>SVG Failed to Load</span>
                    </object>
                    <p class="mt-2">Object tag with type="image/svg+xml"</p>
                </div>
            </div>
            
            <!-- Method 3: iframe -->
            <div class="card mb-3">
                <div class="card-header">Method 3: iframe</div>
                <div class="card-body">
                    <iframe src="https://api.dicebear.com/9.x/bottts/svg?seed=test&eyes=round&mouth=grill01&primaryColor=%230E7490" 
                            width="100" 
                            height="100" 
                            style="border: none;">
                    </iframe>
                    <p class="mt-2">iframe approach</p>
                </div>
            </div>
            
            <!-- Method 4: Fetched and Embedded SVG -->
            <div class="card mb-3">
                <div class="card-header">Method 4: Fetched SVG (Base64)</div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(base64SvgData))
                    {
                        <img src="@base64SvgData" width="100" height="100" alt="Fetched SVG" />
                    }
                    else
                    {
                        <span>Loading...</span>
                    }
                    <p class="mt-2">Fetched and converted to base64 data URI</p>
                </div>
            </div>
            
            <!-- Method 5: Raw SVG embed -->
            <div class="card mb-3">
                <div class="card-header">Method 5: Raw SVG Embed</div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(rawSvgContent))
                    {
                        @((MarkupString)rawSvgContent)
                    }
                    else
                    {
                        <span>Loading...</span>
                    }
                    <p class="mt-2">Raw SVG embedded directly</p>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mt-4">
        <div class="col-12">
            <h4>Testing Grid of Bottts Eye Types</h4>
            <div class="d-flex flex-wrap gap-3">
                @foreach (var eyeType in eyeTypes)
                {
                    <div class="text-center">
                        <div style="width: 80px; height: 80px; background-image: url('@GetAvatarUrl(eyeType)'); background-size: contain; background-repeat: no-repeat; background-position: center; border: 1px solid #ddd; border-radius: 8px;">
                        </div>
                        <small>@eyeType</small>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string base64SvgData = "";
    private string rawSvgContent = "";
    private string[] eyeTypes = new[] { "eva", "robocop", "round", "roundFrame01", "roundFrame02", "sensor", "shade01" };
    
    protected override async Task OnInitializedAsync()
    {
        // Fetch SVG and convert to base64
        try
        {
            using var httpClient = new HttpClient();
            var svgUrl = "https://api.dicebear.com/9.x/bottts/svg?seed=test&eyes=sensor&mouth=square01&primaryColor=%230E7490";
            var svgContent = await httpClient.GetStringAsync(svgUrl);
            
            // Convert to base64 data URI
            var base64 = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(svgContent));
            base64SvgData = $"data:image/svg+xml;base64,{base64}";
            
            // Also store raw SVG with size attributes
            rawSvgContent = svgContent.Replace("<svg", "<svg width=\"100\" height=\"100\"");
        }
        catch (Exception ex)
        {
            base64SvgData = "Error: " + ex.Message;
        }
    }
    
    private string GetAvatarUrl(string eyeType)
    {
        return $"https://api.dicebear.com/9.x/bottts/svg?seed=preview&eyes={eyeType}&mouth=smile01&primaryColor=%230E7490&backgroundColor=%23f8f9fa";
    }
}